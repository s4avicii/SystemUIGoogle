package com.android.systemui;

import android.app.AlarmManager;
import android.app.INotificationManager;
import android.app.IWallpaperManager;
import android.hardware.SensorPrivacyManager;
import android.hardware.display.NightDisplayListener;
import android.os.Handler;
import android.os.Looper;
import android.util.DisplayMetrics;
import android.view.IWindowManager;
import com.android.internal.logging.MetricsLogger;
import com.android.internal.logging.UiEventLogger;
import com.android.internal.statusbar.IStatusBarService;
import com.android.keyguard.KeyguardSecurityModel;
import com.android.keyguard.KeyguardUpdateMonitor;
import com.android.keyguard.clock.ClockManager;
import com.android.settingslib.bluetooth.LocalBluetoothManager;
import com.android.systemui.accessibility.AccessibilityButtonModeObserver;
import com.android.systemui.accessibility.AccessibilityButtonTargetsObserver;
import com.android.systemui.accessibility.floatingmenu.AccessibilityFloatingMenuController;
import com.android.systemui.appops.AppOpsController;
import com.android.systemui.assist.AssistManager;
import com.android.systemui.broadcast.BroadcastDispatcher;
import com.android.systemui.colorextraction.SysuiColorExtractor;
import com.android.systemui.dagger.FrameworkServicesModule_ProvideIWallPaperManagerFactory;
import com.android.systemui.dock.DockManager;
import com.android.systemui.dump.DumpManager;
import com.android.systemui.flags.FeatureFlags;
import com.android.systemui.fragments.FragmentService;
import com.android.systemui.hdmi.HdmiCecSetMenuLanguageHelper;
import com.android.systemui.keyguard.ScreenLifecycle;
import com.android.systemui.keyguard.WakefulnessLifecycle;
import com.android.systemui.media.dialog.MediaOutputDialogFactory;
import com.android.systemui.model.SysUiState;
import com.android.systemui.navigationbar.NavigationBarController;
import com.android.systemui.navigationbar.NavigationBarOverlayController;
import com.android.systemui.navigationbar.NavigationModeController;
import com.android.systemui.navigationbar.gestural.EdgeBackGestureHandler;
import com.android.systemui.p006qs.ReduceBrightColorsController;
import com.android.systemui.p006qs.tiles.dialog.InternetDialogFactory;
import com.android.systemui.plugins.ActivityStarter;
import com.android.systemui.plugins.DarkIconDispatcher;
import com.android.systemui.plugins.PluginDependencyProvider;
import com.android.systemui.plugins.VolumeDialogController;
import com.android.systemui.plugins.statusbar.StatusBarStateController;
import com.android.systemui.power.EnhancedEstimates;
import com.android.systemui.power.PowerUI;
import com.android.systemui.privacy.PrivacyItemController;
import com.android.systemui.recents.OverviewProxyService;
import com.android.systemui.screenrecord.RecordingController;
import com.android.systemui.shared.plugins.PluginManager;
import com.android.systemui.shared.system.ActivityManagerWrapper;
import com.android.systemui.shared.system.DevicePolicyManagerWrapper;
import com.android.systemui.shared.system.PackageManagerWrapper;
import com.android.systemui.statusbar.CommandQueue;
import com.android.systemui.statusbar.NotificationListener;
import com.android.systemui.statusbar.NotificationLockscreenUserManager;
import com.android.systemui.statusbar.NotificationMediaManager;
import com.android.systemui.statusbar.NotificationRemoteInputManager;
import com.android.systemui.statusbar.NotificationShadeWindowController;
import com.android.systemui.statusbar.NotificationViewHierarchyManager;
import com.android.systemui.statusbar.SmartReplyController;
import com.android.systemui.statusbar.VibratorHelper;
import com.android.systemui.statusbar.events.PrivacyDotViewController;
import com.android.systemui.statusbar.events.SystemStatusAnimationScheduler;
import com.android.systemui.statusbar.notification.NotificationEntryManager;
import com.android.systemui.statusbar.notification.NotificationFilter;
import com.android.systemui.statusbar.notification.collection.legacy.NotificationGroupManagerLegacy;
import com.android.systemui.statusbar.notification.collection.legacy.VisualStabilityManager;
import com.android.systemui.statusbar.notification.collection.render.GroupExpansionManager;
import com.android.systemui.statusbar.notification.collection.render.GroupMembershipManager;
import com.android.systemui.statusbar.notification.logging.NotificationLogger;
import com.android.systemui.statusbar.notification.row.NotificationGutsManager;
import com.android.systemui.statusbar.notification.stack.AmbientState;
import com.android.systemui.statusbar.notification.stack.NotificationSectionsManager;
import com.android.systemui.statusbar.phone.AutoHideController;
import com.android.systemui.statusbar.phone.DozeParameters;
import com.android.systemui.statusbar.phone.KeyguardDismissUtil;
import com.android.systemui.statusbar.phone.LightBarController;
import com.android.systemui.statusbar.phone.LockscreenGestureLogger;
import com.android.systemui.statusbar.phone.ManagedProfileController;
import com.android.systemui.statusbar.phone.NotificationGroupAlertTransferHelper;
import com.android.systemui.statusbar.phone.ScreenOffAnimationController;
import com.android.systemui.statusbar.phone.ShadeController;
import com.android.systemui.statusbar.phone.StatusBarContentInsetsProvider;
import com.android.systemui.statusbar.phone.StatusBarIconController;
import com.android.systemui.statusbar.policy.AccessibilityController;
import com.android.systemui.statusbar.policy.AccessibilityManagerWrapper;
import com.android.systemui.statusbar.policy.BatteryController;
import com.android.systemui.statusbar.policy.BluetoothController;
import com.android.systemui.statusbar.policy.CastController;
import com.android.systemui.statusbar.policy.ConfigurationController;
import com.android.systemui.statusbar.policy.DataSaverController;
import com.android.systemui.statusbar.policy.DeviceProvisionedController;
import com.android.systemui.statusbar.policy.ExtensionController;
import com.android.systemui.statusbar.policy.FlashlightController;
import com.android.systemui.statusbar.policy.HotspotController;
import com.android.systemui.statusbar.policy.KeyguardStateController;
import com.android.systemui.statusbar.policy.LocationController;
import com.android.systemui.statusbar.policy.NextAlarmController;
import com.android.systemui.statusbar.policy.RemoteInputQuickSettingsDisabler;
import com.android.systemui.statusbar.policy.RotationLockController;
import com.android.systemui.statusbar.policy.SecurityController;
import com.android.systemui.statusbar.policy.SensorPrivacyController;
import com.android.systemui.statusbar.policy.SmartReplyConstants;
import com.android.systemui.statusbar.policy.UserInfoController;
import com.android.systemui.statusbar.policy.UserSwitcherController;
import com.android.systemui.statusbar.policy.ZenModeController;
import com.android.systemui.statusbar.window.StatusBarWindowController;
import com.android.systemui.telephony.TelephonyListenerManager;
import com.android.systemui.tracing.ProtoTracer;
import com.android.systemui.tuner.TunablePadding;
import com.android.systemui.tuner.TunerService;
import com.android.systemui.util.DeviceConfigProxy;
import com.android.systemui.util.concurrency.GlobalConcurrencyModule_ProvideMainLooperFactory;
import com.android.systemui.util.leak.GarbageMonitor;
import com.android.systemui.util.leak.LeakDetector;
import com.android.systemui.util.leak.LeakReporter;
import com.android.systemui.util.sensors.AsyncSensorManager;
import dagger.internal.DoubleCheck;
import dagger.internal.Factory;
import java.util.concurrent.Executor;
import javax.inject.Provider;

public final class Dependency_Factory implements Factory<Dependency> {
    public final Provider<AccessibilityButtonTargetsObserver> mAccessibilityButtonListControllerProvider;
    public final Provider<AccessibilityButtonModeObserver> mAccessibilityButtonModeObserverProvider;
    public final Provider<AccessibilityController> mAccessibilityControllerProvider;
    public final Provider<AccessibilityFloatingMenuController> mAccessibilityFloatingMenuControllerProvider;
    public final Provider<AccessibilityManagerWrapper> mAccessibilityManagerWrapperProvider;
    public final Provider<ActivityManagerWrapper> mActivityManagerWrapperProvider;
    public final Provider<ActivityStarter> mActivityStarterProvider;
    public final Provider<AlarmManager> mAlarmManagerProvider;
    public final Provider<AmbientState> mAmbientStateLazyProvider;
    public final Provider<AppOpsController> mAppOpsControllerProvider;
    public final Provider<AssistManager> mAssistManagerProvider;
    public final Provider<AsyncSensorManager> mAsyncSensorManagerProvider;
    public final Provider<AutoHideController> mAutoHideControllerProvider;
    public final Provider<Executor> mBackgroundExecutorProvider;
    public final Provider<BatteryController> mBatteryControllerProvider;
    public final Provider<Handler> mBgHandlerProvider;
    public final Provider<Looper> mBgLooperProvider;
    public final Provider<BluetoothController> mBluetoothControllerProvider;
    public final Provider<BroadcastDispatcher> mBroadcastDispatcherProvider;
    public final Provider<CastController> mCastControllerProvider;
    public final Provider<ClockManager> mClockManagerProvider;
    public final Provider<CommandQueue> mCommandQueueProvider;
    public final Provider<ConfigurationController> mConfigurationControllerProvider;
    public final Provider<StatusBarContentInsetsProvider> mContentInsetsProviderLazyProvider;
    public final Provider<DarkIconDispatcher> mDarkIconDispatcherProvider;
    public final Provider<DataSaverController> mDataSaverControllerProvider;
    public final Provider<DeviceConfigProxy> mDeviceConfigProxyProvider;
    public final Provider<DevicePolicyManagerWrapper> mDevicePolicyManagerWrapperProvider;
    public final Provider<DeviceProvisionedController> mDeviceProvisionedControllerProvider;
    public final Provider<DisplayMetrics> mDisplayMetricsProvider;
    public final Provider<DockManager> mDockManagerProvider;
    public final Provider<DozeParameters> mDozeParametersProvider;
    public final Provider<DumpManager> mDumpManagerProvider;
    public final Provider<EdgeBackGestureHandler.Factory> mEdgeBackGestureHandlerFactoryLazyProvider;
    public final Provider<EnhancedEstimates> mEnhancedEstimatesProvider;
    public final Provider<ExtensionController> mExtensionControllerProvider;
    public final Provider<FeatureFlags> mFeatureFlagsLazyProvider;
    public final Provider<FlashlightController> mFlashlightControllerProvider;
    public final Provider<ForegroundServiceController> mForegroundServiceControllerProvider;
    public final Provider<ForegroundServiceNotificationListener> mForegroundServiceNotificationListenerProvider;
    public final Provider<FragmentService> mFragmentServiceProvider;
    public final Provider<GarbageMonitor> mGarbageMonitorProvider;
    public final Provider<GroupExpansionManager> mGroupExpansionManagerLazyProvider;
    public final Provider<GroupMembershipManager> mGroupMembershipManagerLazyProvider;
    public final Provider<HdmiCecSetMenuLanguageHelper> mHdmiCecSetMenuLanguageHelperProvider;
    public final Provider<HotspotController> mHotspotControllerProvider;
    public final Provider<INotificationManager> mINotificationManagerProvider;
    public final Provider<IStatusBarService> mIStatusBarServiceProvider;
    public final Provider<IWindowManager> mIWindowManagerProvider;
    public final Provider<InternetDialogFactory> mInternetDialogFactoryProvider;
    public final Provider<KeyguardDismissUtil> mKeyguardDismissUtilProvider;
    public final Provider<NotificationEntryManager.KeyguardEnvironment> mKeyguardEnvironmentProvider;
    public final Provider<KeyguardStateController> mKeyguardMonitorProvider;
    public final Provider<KeyguardSecurityModel> mKeyguardSecurityModelProvider;
    public final Provider<KeyguardUpdateMonitor> mKeyguardUpdateMonitorProvider;
    public final Provider<LeakDetector> mLeakDetectorProvider;
    public final Provider<String> mLeakReportEmailProvider;
    public final Provider<LeakReporter> mLeakReporterProvider;
    public final Provider<LightBarController> mLightBarControllerProvider;
    public final Provider<LocalBluetoothManager> mLocalBluetoothManagerProvider;
    public final Provider<LocationController> mLocationControllerProvider;
    public final Provider<LockscreenGestureLogger> mLockscreenGestureLoggerProvider;
    public final Provider<Executor> mMainExecutorProvider;
    public final Provider<Handler> mMainHandlerProvider;
    public final Provider<Looper> mMainLooperProvider;
    public final Provider<ManagedProfileController> mManagedProfileControllerProvider;
    public final Provider<MediaOutputDialogFactory> mMediaOutputDialogFactoryProvider;
    public final Provider<MetricsLogger> mMetricsLoggerProvider;
    public final Provider<NavigationModeController> mNavBarModeControllerProvider;
    public final Provider<NavigationBarOverlayController> mNavbarButtonsControllerLazyProvider;
    public final Provider<NavigationBarController> mNavigationBarControllerProvider;
    public final Provider<NextAlarmController> mNextAlarmControllerProvider;
    public final Provider<NightDisplayListener> mNightDisplayListenerProvider;
    public final Provider<NotificationEntryManager> mNotificationEntryManagerProvider;
    public final Provider<NotificationFilter> mNotificationFilterProvider;
    public final Provider<NotificationGroupAlertTransferHelper> mNotificationGroupAlertTransferHelperProvider;
    public final Provider<NotificationGroupManagerLegacy> mNotificationGroupManagerProvider;
    public final Provider<NotificationGutsManager> mNotificationGutsManagerProvider;
    public final Provider<NotificationListener> mNotificationListenerProvider;
    public final Provider<NotificationLockscreenUserManager> mNotificationLockscreenUserManagerProvider;
    public final Provider<NotificationLogger> mNotificationLoggerProvider;
    public final Provider<NotificationMediaManager> mNotificationMediaManagerProvider;
    public final Provider<NotificationRemoteInputManager.Callback> mNotificationRemoteInputManagerCallbackProvider;
    public final Provider<NotificationRemoteInputManager> mNotificationRemoteInputManagerProvider;
    public final Provider<NotificationSectionsManager> mNotificationSectionsManagerLazyProvider;
    public final Provider<NotificationShadeWindowController> mNotificationShadeWindowControllerProvider;
    public final Provider<NotificationViewHierarchyManager> mNotificationViewHierarchyManagerProvider;
    public final Provider<OverviewProxyService> mOverviewProxyServiceProvider;
    public final Provider<PackageManagerWrapper> mPackageManagerWrapperProvider;
    public final Provider<PluginDependencyProvider> mPluginDependencyProvider;
    public final Provider<PluginManager> mPluginManagerProvider;
    public final Provider<PrivacyDotViewController> mPrivacyDotViewControllerLazyProvider;
    public final Provider<PrivacyItemController> mPrivacyItemControllerProvider;
    public final Provider<ProtoTracer> mProtoTracerProvider;
    public final Provider<RecordingController> mRecordingControllerProvider;
    public final Provider<ReduceBrightColorsController> mReduceBrightColorsControllerProvider;
    public final Provider<RemoteInputQuickSettingsDisabler> mRemoteInputQuickSettingsDisablerProvider;
    public final Provider<RotationLockController> mRotationLockControllerProvider;
    public final Provider<ScreenLifecycle> mScreenLifecycleProvider;
    public final Provider<ScreenOffAnimationController> mScreenOffAnimationControllerProvider;
    public final Provider<SecurityController> mSecurityControllerProvider;
    public final Provider<SensorPrivacyController> mSensorPrivacyControllerProvider;
    public final Provider<SensorPrivacyManager> mSensorPrivacyManagerProvider;
    public final Provider<ShadeController> mShadeControllerProvider;
    public final Provider<SmartReplyConstants> mSmartReplyConstantsProvider;
    public final Provider<SmartReplyController> mSmartReplyControllerProvider;
    public final Provider<StatusBarIconController> mStatusBarIconControllerProvider;
    public final Provider<StatusBarStateController> mStatusBarStateControllerProvider;
    public final Provider<SysUiState> mSysUiStateFlagsContainerProvider;
    public final Provider<SystemStatusAnimationScheduler> mSystemStatusAnimationSchedulerLazyProvider;
    public final Provider<SysuiColorExtractor> mSysuiColorExtractorProvider;
    public final Provider<TelephonyListenerManager> mTelephonyListenerManagerProvider;
    public final Provider<StatusBarWindowController> mTempStatusBarWindowControllerProvider;
    public final Provider<Handler> mTimeTickHandlerProvider;
    public final Provider<TunablePadding.TunablePaddingService> mTunablePaddingServiceProvider;
    public final Provider<TunerService> mTunerServiceProvider;
    public final Provider<UiEventLogger> mUiEventLoggerProvider;
    public final Provider<UiOffloadThread> mUiOffloadThreadProvider;
    public final Provider<UserInfoController> mUserInfoControllerProvider;
    public final Provider<UserSwitcherController> mUserSwitcherControllerProvider;
    public final Provider<VibratorHelper> mVibratorHelperProvider;
    public final Provider<VisualStabilityManager> mVisualStabilityManagerProvider;
    public final Provider<VolumeDialogController> mVolumeDialogControllerProvider;
    public final Provider<WakefulnessLifecycle> mWakefulnessLifecycleProvider;
    public final Provider<IWallpaperManager> mWallpaperManagerProvider;
    public final Provider<PowerUI.WarningsUI> mWarningsUIProvider;
    public final Provider<ZenModeController> mZenModeControllerProvider;

    public Dependency_Factory(Provider provider, Provider provider2, Provider provider3, Provider provider4, Provider provider5, Provider provider6, Provider provider7, Provider provider8, Provider provider9, Provider provider10, Provider provider11, Provider provider12, Provider provider13, Provider provider14, Provider provider15, Provider provider16, Provider provider17, Provider provider18, Provider provider19, Provider provider20, Provider provider21, Provider provider22, Provider provider23, Provider provider24, Provider provider25, Provider provider26, Provider provider27, Provider provider28, Provider provider29, Provider provider30, Provider provider31, Provider provider32, Provider provider33, Provider provider34, Provider provider35, Provider provider36, Provider provider37, Provider provider38, Provider provider39, Provider provider40, Provider provider41, Provider provider42, Provider provider43, Provider provider44, Provider provider45, Provider provider46, Provider provider47, Provider provider48, Provider provider49, Provider provider50, Provider provider51, Provider provider52, Provider provider53, Provider provider54, Provider provider55, Provider provider56, Provider provider57, Provider provider58, Provider provider59, Provider provider60, Provider provider61, Provider provider62, Provider provider63, Provider provider64, Provider provider65, Provider provider66, Provider provider67, Provider provider68, Provider provider69, Provider provider70, Provider provider71, Provider provider72, Provider provider73, Provider provider74, Provider provider75, Provider provider76, Provider provider77, Provider provider78, Provider provider79, Provider provider80, Provider provider81, Provider provider82, Provider provider83, Provider provider84, Provider provider85, Provider provider86, Provider provider87, Provider provider88, Provider provider89, Provider provider90, Provider provider91, Provider provider92, Provider provider93, Provider provider94, Provider provider95, Provider provider96, Provider provider97, Provider provider98, Provider provider99, Provider provider100, Provider provider101, Provider provider102, Provider provider103, Provider provider104, Provider provider105, Provider provider106, Provider provider107, Provider provider108, Provider provider109, Provider provider110, Provider provider111, Provider provider112, Provider provider113, Provider provider114, Provider provider115, Provider provider116, Provider provider117, Provider provider118, Provider provider119, Provider provider120, Provider provider121, Provider provider122, Provider provider123, Provider provider124, Provider provider125) {
        GlobalConcurrencyModule_ProvideMainLooperFactory globalConcurrencyModule_ProvideMainLooperFactory = GlobalConcurrencyModule_ProvideMainLooperFactory.InstanceHolder.INSTANCE;
        FrameworkServicesModule_ProvideIWallPaperManagerFactory frameworkServicesModule_ProvideIWallPaperManagerFactory = FrameworkServicesModule_ProvideIWallPaperManagerFactory.InstanceHolder.INSTANCE;
        this.mDumpManagerProvider = provider;
        this.mActivityStarterProvider = provider2;
        this.mBroadcastDispatcherProvider = provider3;
        this.mAsyncSensorManagerProvider = provider4;
        this.mBluetoothControllerProvider = provider5;
        this.mLocationControllerProvider = provider6;
        this.mRotationLockControllerProvider = provider7;
        this.mZenModeControllerProvider = provider8;
        this.mHdmiCecSetMenuLanguageHelperProvider = provider9;
        this.mHotspotControllerProvider = provider10;
        this.mCastControllerProvider = provider11;
        this.mFlashlightControllerProvider = provider12;
        this.mUserSwitcherControllerProvider = provider13;
        this.mUserInfoControllerProvider = provider14;
        this.mKeyguardMonitorProvider = provider15;
        this.mKeyguardUpdateMonitorProvider = provider16;
        this.mBatteryControllerProvider = provider17;
        this.mNightDisplayListenerProvider = provider18;
        this.mReduceBrightColorsControllerProvider = provider19;
        this.mManagedProfileControllerProvider = provider20;
        this.mNextAlarmControllerProvider = provider21;
        this.mDataSaverControllerProvider = provider22;
        this.mAccessibilityControllerProvider = provider23;
        this.mDeviceProvisionedControllerProvider = provider24;
        this.mPluginManagerProvider = provider25;
        this.mAssistManagerProvider = provider26;
        this.mSecurityControllerProvider = provider27;
        this.mLeakDetectorProvider = provider28;
        this.mLeakReporterProvider = provider29;
        this.mGarbageMonitorProvider = provider30;
        this.mTunerServiceProvider = provider31;
        this.mNotificationShadeWindowControllerProvider = provider32;
        this.mTempStatusBarWindowControllerProvider = provider33;
        this.mDarkIconDispatcherProvider = provider34;
        this.mConfigurationControllerProvider = provider35;
        this.mStatusBarIconControllerProvider = provider36;
        this.mScreenLifecycleProvider = provider37;
        this.mWakefulnessLifecycleProvider = provider38;
        this.mFragmentServiceProvider = provider39;
        this.mExtensionControllerProvider = provider40;
        this.mPluginDependencyProvider = provider41;
        this.mLocalBluetoothManagerProvider = provider42;
        this.mVolumeDialogControllerProvider = provider43;
        this.mMetricsLoggerProvider = provider44;
        this.mAccessibilityManagerWrapperProvider = provider45;
        this.mSysuiColorExtractorProvider = provider46;
        this.mTunablePaddingServiceProvider = provider47;
        this.mForegroundServiceControllerProvider = provider48;
        this.mUiOffloadThreadProvider = provider49;
        this.mWarningsUIProvider = provider50;
        this.mLightBarControllerProvider = provider51;
        this.mIWindowManagerProvider = provider52;
        this.mOverviewProxyServiceProvider = provider53;
        this.mNavBarModeControllerProvider = provider54;
        this.mAccessibilityButtonModeObserverProvider = provider55;
        this.mAccessibilityButtonListControllerProvider = provider56;
        this.mEnhancedEstimatesProvider = provider57;
        this.mVibratorHelperProvider = provider58;
        this.mIStatusBarServiceProvider = provider59;
        this.mDisplayMetricsProvider = provider60;
        this.mLockscreenGestureLoggerProvider = provider61;
        this.mKeyguardEnvironmentProvider = provider62;
        this.mShadeControllerProvider = provider63;
        this.mNotificationRemoteInputManagerCallbackProvider = provider64;
        this.mAppOpsControllerProvider = provider65;
        this.mNavigationBarControllerProvider = provider66;
        this.mAccessibilityFloatingMenuControllerProvider = provider67;
        this.mStatusBarStateControllerProvider = provider68;
        this.mNotificationLockscreenUserManagerProvider = provider69;
        this.mNotificationGroupAlertTransferHelperProvider = provider70;
        this.mNotificationGroupManagerProvider = provider71;
        this.mVisualStabilityManagerProvider = provider72;
        this.mNotificationGutsManagerProvider = provider73;
        this.mNotificationMediaManagerProvider = provider74;
        this.mNotificationRemoteInputManagerProvider = provider75;
        this.mSmartReplyConstantsProvider = provider76;
        this.mNotificationListenerProvider = provider77;
        this.mNotificationLoggerProvider = provider78;
        this.mNotificationViewHierarchyManagerProvider = provider79;
        this.mNotificationFilterProvider = provider80;
        this.mKeyguardDismissUtilProvider = provider81;
        this.mSmartReplyControllerProvider = provider82;
        this.mRemoteInputQuickSettingsDisablerProvider = provider83;
        this.mNotificationEntryManagerProvider = provider84;
        this.mSensorPrivacyManagerProvider = provider85;
        this.mAutoHideControllerProvider = provider86;
        this.mForegroundServiceNotificationListenerProvider = provider87;
        this.mPrivacyItemControllerProvider = provider88;
        this.mBgLooperProvider = provider89;
        this.mBgHandlerProvider = provider90;
        this.mMainLooperProvider = globalConcurrencyModule_ProvideMainLooperFactory;
        this.mMainHandlerProvider = provider91;
        this.mTimeTickHandlerProvider = provider92;
        this.mLeakReportEmailProvider = provider93;
        this.mMainExecutorProvider = provider94;
        this.mBackgroundExecutorProvider = provider95;
        this.mClockManagerProvider = provider96;
        this.mActivityManagerWrapperProvider = provider97;
        this.mDevicePolicyManagerWrapperProvider = provider98;
        this.mPackageManagerWrapperProvider = provider99;
        this.mSensorPrivacyControllerProvider = provider100;
        this.mDockManagerProvider = provider101;
        this.mINotificationManagerProvider = provider102;
        this.mSysUiStateFlagsContainerProvider = provider103;
        this.mAlarmManagerProvider = provider104;
        this.mKeyguardSecurityModelProvider = provider105;
        this.mDozeParametersProvider = provider106;
        this.mWallpaperManagerProvider = frameworkServicesModule_ProvideIWallPaperManagerFactory;
        this.mCommandQueueProvider = provider107;
        this.mRecordingControllerProvider = provider108;
        this.mProtoTracerProvider = provider109;
        this.mMediaOutputDialogFactoryProvider = provider110;
        this.mDeviceConfigProxyProvider = provider111;
        this.mNavbarButtonsControllerLazyProvider = provider112;
        this.mTelephonyListenerManagerProvider = provider113;
        this.mSystemStatusAnimationSchedulerLazyProvider = provider114;
        this.mPrivacyDotViewControllerLazyProvider = provider115;
        this.mEdgeBackGestureHandlerFactoryLazyProvider = provider116;
        this.mUiEventLoggerProvider = provider117;
        this.mContentInsetsProviderLazyProvider = provider118;
        this.mInternetDialogFactoryProvider = provider119;
        this.mFeatureFlagsLazyProvider = provider120;
        this.mNotificationSectionsManagerLazyProvider = provider121;
        this.mScreenOffAnimationControllerProvider = provider122;
        this.mAmbientStateLazyProvider = provider123;
        this.mGroupMembershipManagerLazyProvider = provider124;
        this.mGroupExpansionManagerLazyProvider = provider125;
    }

    public static Dependency_Factory create(Provider provider, Provider provider2, Provider provider3, Provider provider4, Provider provider5, Provider provider6, Provider provider7, Provider provider8, Provider provider9, Provider provider10, Provider provider11, Provider provider12, Provider provider13, Provider provider14, Provider provider15, Provider provider16, Provider provider17, Provider provider18, Provider provider19, Provider provider20, Provider provider21, Provider provider22, Provider provider23, Provider provider24, Provider provider25, Provider provider26, Provider provider27, Provider provider28, Provider provider29, Provider provider30, Provider provider31, Provider provider32, Provider provider33, Provider provider34, Provider provider35, Provider provider36, Provider provider37, Provider provider38, Provider provider39, Provider provider40, Provider provider41, Provider provider42, Provider provider43, Provider provider44, Provider provider45, Provider provider46, Provider provider47, Provider provider48, Provider provider49, Provider provider50, Provider provider51, Provider provider52, Provider provider53, Provider provider54, Provider provider55, Provider provider56, Provider provider57, Provider provider58, Provider provider59, Provider provider60, Provider provider61, Provider provider62, Provider provider63, Provider provider64, Provider provider65, Provider provider66, Provider provider67, Provider provider68, Provider provider69, Provider provider70, Provider provider71, Provider provider72, Provider provider73, Provider provider74, Provider provider75, Provider provider76, Provider provider77, Provider provider78, Provider provider79, Provider provider80, Provider provider81, Provider provider82, Provider provider83, Provider provider84, Provider provider85, Provider provider86, Provider provider87, Provider provider88, Provider provider89, Provider provider90, Provider provider91, Provider provider92, Provider provider93, Provider provider94, Provider provider95, Provider provider96, Provider provider97, Provider provider98, Provider provider99, Provider provider100, Provider provider101, Provider provider102, Provider provider103, Provider provider104, Provider provider105, Provider provider106, Provider provider107, Provider provider108, Provider provider109, Provider provider110, Provider provider111, Provider provider112, Provider provider113, Provider provider114, Provider provider115, Provider provider116, Provider provider117, Provider provider118, Provider provider119, Provider provider120, Provider provider121, Provider provider122, Provider provider123, Provider provider124, Provider provider125) {
        return new Dependency_Factory(provider, provider2, provider3, provider4, provider5, provider6, provider7, provider8, provider9, provider10, provider11, provider12, provider13, provider14, provider15, provider16, provider17, provider18, provider19, provider20, provider21, provider22, provider23, provider24, provider25, provider26, provider27, provider28, provider29, provider30, provider31, provider32, provider33, provider34, provider35, provider36, provider37, provider38, provider39, provider40, provider41, provider42, provider43, provider44, provider45, provider46, provider47, provider48, provider49, provider50, provider51, provider52, provider53, provider54, provider55, provider56, provider57, provider58, provider59, provider60, provider61, provider62, provider63, provider64, provider65, provider66, provider67, provider68, provider69, provider70, provider71, provider72, provider73, provider74, provider75, provider76, provider77, provider78, provider79, provider80, provider81, provider82, provider83, provider84, provider85, provider86, provider87, provider88, provider89, provider90, provider91, provider92, provider93, provider94, provider95, provider96, provider97, provider98, provider99, provider100, provider101, provider102, provider103, provider104, provider105, provider106, provider107, provider108, provider109, provider110, provider111, provider112, provider113, provider114, provider115, provider116, provider117, provider118, provider119, provider120, provider121, provider122, provider123, provider124, provider125);
    }

    public final Object get() {
        Dependency dependency = new Dependency();
        dependency.mDumpManager = this.mDumpManagerProvider.get();
        dependency.mActivityStarter = DoubleCheck.lazy(this.mActivityStarterProvider);
        dependency.mBroadcastDispatcher = DoubleCheck.lazy(this.mBroadcastDispatcherProvider);
        dependency.mAsyncSensorManager = DoubleCheck.lazy(this.mAsyncSensorManagerProvider);
        dependency.mBluetoothController = DoubleCheck.lazy(this.mBluetoothControllerProvider);
        dependency.mLocationController = DoubleCheck.lazy(this.mLocationControllerProvider);
        dependency.mRotationLockController = DoubleCheck.lazy(this.mRotationLockControllerProvider);
        dependency.mZenModeController = DoubleCheck.lazy(this.mZenModeControllerProvider);
        dependency.mHdmiCecSetMenuLanguageHelper = DoubleCheck.lazy(this.mHdmiCecSetMenuLanguageHelperProvider);
        dependency.mHotspotController = DoubleCheck.lazy(this.mHotspotControllerProvider);
        dependency.mCastController = DoubleCheck.lazy(this.mCastControllerProvider);
        dependency.mFlashlightController = DoubleCheck.lazy(this.mFlashlightControllerProvider);
        dependency.mUserSwitcherController = DoubleCheck.lazy(this.mUserSwitcherControllerProvider);
        dependency.mUserInfoController = DoubleCheck.lazy(this.mUserInfoControllerProvider);
        dependency.mKeyguardMonitor = DoubleCheck.lazy(this.mKeyguardMonitorProvider);
        dependency.mKeyguardUpdateMonitor = DoubleCheck.lazy(this.mKeyguardUpdateMonitorProvider);
        dependency.mBatteryController = DoubleCheck.lazy(this.mBatteryControllerProvider);
        dependency.mNightDisplayListener = DoubleCheck.lazy(this.mNightDisplayListenerProvider);
        dependency.mReduceBrightColorsController = DoubleCheck.lazy(this.mReduceBrightColorsControllerProvider);
        dependency.mManagedProfileController = DoubleCheck.lazy(this.mManagedProfileControllerProvider);
        dependency.mNextAlarmController = DoubleCheck.lazy(this.mNextAlarmControllerProvider);
        dependency.mDataSaverController = DoubleCheck.lazy(this.mDataSaverControllerProvider);
        dependency.mAccessibilityController = DoubleCheck.lazy(this.mAccessibilityControllerProvider);
        dependency.mDeviceProvisionedController = DoubleCheck.lazy(this.mDeviceProvisionedControllerProvider);
        dependency.mPluginManager = DoubleCheck.lazy(this.mPluginManagerProvider);
        dependency.mAssistManager = DoubleCheck.lazy(this.mAssistManagerProvider);
        dependency.mSecurityController = DoubleCheck.lazy(this.mSecurityControllerProvider);
        dependency.mLeakDetector = DoubleCheck.lazy(this.mLeakDetectorProvider);
        dependency.mLeakReporter = DoubleCheck.lazy(this.mLeakReporterProvider);
        dependency.mGarbageMonitor = DoubleCheck.lazy(this.mGarbageMonitorProvider);
        dependency.mTunerService = DoubleCheck.lazy(this.mTunerServiceProvider);
        dependency.mNotificationShadeWindowController = DoubleCheck.lazy(this.mNotificationShadeWindowControllerProvider);
        dependency.mTempStatusBarWindowController = DoubleCheck.lazy(this.mTempStatusBarWindowControllerProvider);
        dependency.mDarkIconDispatcher = DoubleCheck.lazy(this.mDarkIconDispatcherProvider);
        dependency.mConfigurationController = DoubleCheck.lazy(this.mConfigurationControllerProvider);
        dependency.mStatusBarIconController = DoubleCheck.lazy(this.mStatusBarIconControllerProvider);
        dependency.mScreenLifecycle = DoubleCheck.lazy(this.mScreenLifecycleProvider);
        dependency.mWakefulnessLifecycle = DoubleCheck.lazy(this.mWakefulnessLifecycleProvider);
        dependency.mFragmentService = DoubleCheck.lazy(this.mFragmentServiceProvider);
        dependency.mExtensionController = DoubleCheck.lazy(this.mExtensionControllerProvider);
        dependency.mPluginDependencyProvider = DoubleCheck.lazy(this.mPluginDependencyProvider);
        dependency.mLocalBluetoothManager = DoubleCheck.lazy(this.mLocalBluetoothManagerProvider);
        dependency.mVolumeDialogController = DoubleCheck.lazy(this.mVolumeDialogControllerProvider);
        dependency.mMetricsLogger = DoubleCheck.lazy(this.mMetricsLoggerProvider);
        dependency.mAccessibilityManagerWrapper = DoubleCheck.lazy(this.mAccessibilityManagerWrapperProvider);
        dependency.mSysuiColorExtractor = DoubleCheck.lazy(this.mSysuiColorExtractorProvider);
        dependency.mTunablePaddingService = DoubleCheck.lazy(this.mTunablePaddingServiceProvider);
        dependency.mForegroundServiceController = DoubleCheck.lazy(this.mForegroundServiceControllerProvider);
        dependency.mUiOffloadThread = DoubleCheck.lazy(this.mUiOffloadThreadProvider);
        dependency.mWarningsUI = DoubleCheck.lazy(this.mWarningsUIProvider);
        dependency.mLightBarController = DoubleCheck.lazy(this.mLightBarControllerProvider);
        dependency.mIWindowManager = DoubleCheck.lazy(this.mIWindowManagerProvider);
        dependency.mOverviewProxyService = DoubleCheck.lazy(this.mOverviewProxyServiceProvider);
        dependency.mNavBarModeController = DoubleCheck.lazy(this.mNavBarModeControllerProvider);
        dependency.mAccessibilityButtonModeObserver = DoubleCheck.lazy(this.mAccessibilityButtonModeObserverProvider);
        dependency.mAccessibilityButtonListController = DoubleCheck.lazy(this.mAccessibilityButtonListControllerProvider);
        dependency.mEnhancedEstimates = DoubleCheck.lazy(this.mEnhancedEstimatesProvider);
        dependency.mVibratorHelper = DoubleCheck.lazy(this.mVibratorHelperProvider);
        dependency.mIStatusBarService = DoubleCheck.lazy(this.mIStatusBarServiceProvider);
        dependency.mDisplayMetrics = DoubleCheck.lazy(this.mDisplayMetricsProvider);
        dependency.mLockscreenGestureLogger = DoubleCheck.lazy(this.mLockscreenGestureLoggerProvider);
        dependency.mKeyguardEnvironment = DoubleCheck.lazy(this.mKeyguardEnvironmentProvider);
        dependency.mShadeController = DoubleCheck.lazy(this.mShadeControllerProvider);
        dependency.mNotificationRemoteInputManagerCallback = DoubleCheck.lazy(this.mNotificationRemoteInputManagerCallbackProvider);
        dependency.mAppOpsController = DoubleCheck.lazy(this.mAppOpsControllerProvider);
        dependency.mNavigationBarController = DoubleCheck.lazy(this.mNavigationBarControllerProvider);
        dependency.mAccessibilityFloatingMenuController = DoubleCheck.lazy(this.mAccessibilityFloatingMenuControllerProvider);
        dependency.mStatusBarStateController = DoubleCheck.lazy(this.mStatusBarStateControllerProvider);
        dependency.mNotificationLockscreenUserManager = DoubleCheck.lazy(this.mNotificationLockscreenUserManagerProvider);
        dependency.mNotificationGroupAlertTransferHelper = DoubleCheck.lazy(this.mNotificationGroupAlertTransferHelperProvider);
        dependency.mNotificationGroupManager = DoubleCheck.lazy(this.mNotificationGroupManagerProvider);
        dependency.mVisualStabilityManager = DoubleCheck.lazy(this.mVisualStabilityManagerProvider);
        dependency.mNotificationGutsManager = DoubleCheck.lazy(this.mNotificationGutsManagerProvider);
        dependency.mNotificationMediaManager = DoubleCheck.lazy(this.mNotificationMediaManagerProvider);
        dependency.mNotificationRemoteInputManager = DoubleCheck.lazy(this.mNotificationRemoteInputManagerProvider);
        dependency.mSmartReplyConstants = DoubleCheck.lazy(this.mSmartReplyConstantsProvider);
        dependency.mNotificationListener = DoubleCheck.lazy(this.mNotificationListenerProvider);
        dependency.mNotificationLogger = DoubleCheck.lazy(this.mNotificationLoggerProvider);
        dependency.mNotificationViewHierarchyManager = DoubleCheck.lazy(this.mNotificationViewHierarchyManagerProvider);
        dependency.mNotificationFilter = DoubleCheck.lazy(this.mNotificationFilterProvider);
        dependency.mKeyguardDismissUtil = DoubleCheck.lazy(this.mKeyguardDismissUtilProvider);
        dependency.mSmartReplyController = DoubleCheck.lazy(this.mSmartReplyControllerProvider);
        dependency.mRemoteInputQuickSettingsDisabler = DoubleCheck.lazy(this.mRemoteInputQuickSettingsDisablerProvider);
        dependency.mNotificationEntryManager = DoubleCheck.lazy(this.mNotificationEntryManagerProvider);
        dependency.mSensorPrivacyManager = DoubleCheck.lazy(this.mSensorPrivacyManagerProvider);
        dependency.mAutoHideController = DoubleCheck.lazy(this.mAutoHideControllerProvider);
        dependency.mForegroundServiceNotificationListener = DoubleCheck.lazy(this.mForegroundServiceNotificationListenerProvider);
        dependency.mPrivacyItemController = DoubleCheck.lazy(this.mPrivacyItemControllerProvider);
        dependency.mBgLooper = DoubleCheck.lazy(this.mBgLooperProvider);
        dependency.mBgHandler = DoubleCheck.lazy(this.mBgHandlerProvider);
        dependency.mMainLooper = DoubleCheck.lazy(this.mMainLooperProvider);
        dependency.mMainHandler = DoubleCheck.lazy(this.mMainHandlerProvider);
        dependency.mTimeTickHandler = DoubleCheck.lazy(this.mTimeTickHandlerProvider);
        dependency.mLeakReportEmail = DoubleCheck.lazy(this.mLeakReportEmailProvider);
        dependency.mMainExecutor = DoubleCheck.lazy(this.mMainExecutorProvider);
        dependency.mBackgroundExecutor = DoubleCheck.lazy(this.mBackgroundExecutorProvider);
        dependency.mClockManager = DoubleCheck.lazy(this.mClockManagerProvider);
        dependency.mActivityManagerWrapper = DoubleCheck.lazy(this.mActivityManagerWrapperProvider);
        dependency.mDevicePolicyManagerWrapper = DoubleCheck.lazy(this.mDevicePolicyManagerWrapperProvider);
        dependency.mPackageManagerWrapper = DoubleCheck.lazy(this.mPackageManagerWrapperProvider);
        dependency.mSensorPrivacyController = DoubleCheck.lazy(this.mSensorPrivacyControllerProvider);
        dependency.mDockManager = DoubleCheck.lazy(this.mDockManagerProvider);
        dependency.mINotificationManager = DoubleCheck.lazy(this.mINotificationManagerProvider);
        dependency.mSysUiStateFlagsContainer = DoubleCheck.lazy(this.mSysUiStateFlagsContainerProvider);
        dependency.mAlarmManager = DoubleCheck.lazy(this.mAlarmManagerProvider);
        dependency.mKeyguardSecurityModel = DoubleCheck.lazy(this.mKeyguardSecurityModelProvider);
        dependency.mDozeParameters = DoubleCheck.lazy(this.mDozeParametersProvider);
        dependency.mWallpaperManager = DoubleCheck.lazy(this.mWallpaperManagerProvider);
        dependency.mCommandQueue = DoubleCheck.lazy(this.mCommandQueueProvider);
        dependency.mRecordingController = DoubleCheck.lazy(this.mRecordingControllerProvider);
        dependency.mProtoTracer = DoubleCheck.lazy(this.mProtoTracerProvider);
        dependency.mMediaOutputDialogFactory = DoubleCheck.lazy(this.mMediaOutputDialogFactoryProvider);
        dependency.mDeviceConfigProxy = DoubleCheck.lazy(this.mDeviceConfigProxyProvider);
        dependency.mNavbarButtonsControllerLazy = DoubleCheck.lazy(this.mNavbarButtonsControllerLazyProvider);
        dependency.mTelephonyListenerManager = DoubleCheck.lazy(this.mTelephonyListenerManagerProvider);
        dependency.mSystemStatusAnimationSchedulerLazy = DoubleCheck.lazy(this.mSystemStatusAnimationSchedulerLazyProvider);
        dependency.mPrivacyDotViewControllerLazy = DoubleCheck.lazy(this.mPrivacyDotViewControllerLazyProvider);
        dependency.mEdgeBackGestureHandlerFactoryLazy = DoubleCheck.lazy(this.mEdgeBackGestureHandlerFactoryLazyProvider);
        dependency.mUiEventLogger = DoubleCheck.lazy(this.mUiEventLoggerProvider);
        dependency.mContentInsetsProviderLazy = DoubleCheck.lazy(this.mContentInsetsProviderLazyProvider);
        dependency.mInternetDialogFactory = DoubleCheck.lazy(this.mInternetDialogFactoryProvider);
        dependency.mFeatureFlagsLazy = DoubleCheck.lazy(this.mFeatureFlagsLazyProvider);
        dependency.mNotificationSectionsManagerLazy = DoubleCheck.lazy(this.mNotificationSectionsManagerLazyProvider);
        dependency.mScreenOffAnimationController = DoubleCheck.lazy(this.mScreenOffAnimationControllerProvider);
        dependency.mAmbientStateLazy = DoubleCheck.lazy(this.mAmbientStateLazyProvider);
        dependency.mGroupMembershipManagerLazy = DoubleCheck.lazy(this.mGroupMembershipManagerLazyProvider);
        dependency.mGroupExpansionManagerLazy = DoubleCheck.lazy(this.mGroupExpansionManagerLazyProvider);
        return dependency;
    }
}
